{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"In\u00edcio Adapta\u00e7\u00e3o para Python 3.9 da apresenta\u00e7\u00e3o sobre exce\u00e7\u00f5es do professor Cl\u00e1udio Esperan\u00e7a. Respons\u00e1vel: Jurandy Soares Exce\u00e7\u00f5es Objetos de Exce\u00e7\u00e3o Avisos O comando raise Raise \u2014 Exemplos Algumas Classes de Exce\u00e7\u00e3o Criando uma Classe de Exce\u00e7\u00e3o Capturando Exce\u00e7\u00f5es Captura de exce\u00e7\u00e3o \u2014 Exemplo 1 Captura de exce\u00e7\u00e3o \u2014 Exemplo 2 Captura de exce\u00e7\u00e3o \u2014 Exemplo 3 Mais except Captura de exce\u00e7\u00e3o \u2014 Exemplo 4 Captura de exce\u00e7\u00e3o \u2014 Exemplo 5 A cl\u00e1usula else Captura de exce\u00e7\u00e3o \u2014 Exemplo 6 A cl\u00e1usula finally Captura de exce\u00e7\u00e3o \u2014 Exemplo 7 Iteradores Iteradores \u2014 Exemplo Geradores Geradores \u2014 Exemplo","title":"In\u00edcio"},{"location":"#inicio","text":"Adapta\u00e7\u00e3o para Python 3.9 da apresenta\u00e7\u00e3o sobre exce\u00e7\u00f5es do professor Cl\u00e1udio Esperan\u00e7a. Respons\u00e1vel: Jurandy Soares Exce\u00e7\u00f5es Objetos de Exce\u00e7\u00e3o Avisos O comando raise Raise \u2014 Exemplos Algumas Classes de Exce\u00e7\u00e3o Criando uma Classe de Exce\u00e7\u00e3o Capturando Exce\u00e7\u00f5es Captura de exce\u00e7\u00e3o \u2014 Exemplo 1 Captura de exce\u00e7\u00e3o \u2014 Exemplo 2 Captura de exce\u00e7\u00e3o \u2014 Exemplo 3 Mais except Captura de exce\u00e7\u00e3o \u2014 Exemplo 4 Captura de exce\u00e7\u00e3o \u2014 Exemplo 5 A cl\u00e1usula else Captura de exce\u00e7\u00e3o \u2014 Exemplo 6 A cl\u00e1usula finally Captura de exce\u00e7\u00e3o \u2014 Exemplo 7 Iteradores Iteradores \u2014 Exemplo Geradores Geradores \u2014 Exemplo","title":"In\u00edcio"},{"location":"avisos/","text":"Avisos Existem condi\u00e7\u00f5es excepcionais menos s\u00e9rias que n\u00e3o provocam o levantamento de um objeto de exce\u00e7\u00e3o, mas apenas s\u00e3o exibidas sob a forma de um aviso Por exemplo: 1 2 3 4 5 6 7 8 9 >>> import warnings >>> print ( \"POO.\" ) # Exibe uma mensagem de aviso >>> warnings . warn ( 'Mensagem de aviso: POO vicia.' ) >>> print ( 'Programa\u00e7\u00e3o orientada a objetos.' ) Warning ( from warnings module ): File \"<pyshell#36>\" , line 1 UserWarning : Mensagem de aviso : POO vicia ! Neste caso, o intepretador informa uma que POO vicia Com avisos, o programa n\u00e3o falha, mas o programador fica ciente que provamelmente deve reescrever a parte de seu c\u00f3digo que provocou o aviso Categorias de Aviso No Python, h\u00e1 uma variedade de exce\u00e7\u00f5es integradas que refletem categorias de aviso, algumas delas s\u00e3o: Classe Warning: \u00e9 a superclasse de todas as classes da categoria de aviso e uma subclasse da classe Exce\u00e7\u00e3o. Classe UserWarning: categoria padr\u00e3o da fun\u00e7\u00e3o warn (). Classe DeprecationWarning: categoria base para alertas sobre recursos obsoletos quando esses avisos s\u00e3o para outros desenvolvedores (acionado por c\u00f3digo em main a menos que seja ignorado). Classe SyntaxWarning: classe base para avisos de atributos sint\u00e1ticos suspeitos. Classe RuntimeWarning: classe base para avisos de atributos de tempo de execu\u00e7\u00e3o suspeitos. Classe FutureWarning: classe base para avisos sobre recursos obsoletos quando certos avisos s\u00e3o destinados a usu\u00e1rios finais de programas escritos em Python. Classe PendingDeprecationWarning: classe base para avisos de um atributo desatualizado. Classe ImportWarning: classe base para avisos causados \u200b\u200bdurante o processo de importa\u00e7\u00e3o de um m\u00f3dulo. Classe UnicodeWarning: classe base para avisos baseados em Unicode. Classe BytesWarning: classe base para avisos baseados em bytes e bytearray. Classe ResourceWarning: classe base para avisos relacionados a recursos. Refer\u00eancias: warnings \u2014 Controle de avisos \u2014 documenta\u00e7\u00e3o Python 3.9.7 Warnings in Python - GeeksforGeeks Python warnings Example","title":"Avisos"},{"location":"avisos/#avisos","text":"Existem condi\u00e7\u00f5es excepcionais menos s\u00e9rias que n\u00e3o provocam o levantamento de um objeto de exce\u00e7\u00e3o, mas apenas s\u00e3o exibidas sob a forma de um aviso Por exemplo: 1 2 3 4 5 6 7 8 9 >>> import warnings >>> print ( \"POO.\" ) # Exibe uma mensagem de aviso >>> warnings . warn ( 'Mensagem de aviso: POO vicia.' ) >>> print ( 'Programa\u00e7\u00e3o orientada a objetos.' ) Warning ( from warnings module ): File \"<pyshell#36>\" , line 1 UserWarning : Mensagem de aviso : POO vicia ! Neste caso, o intepretador informa uma que POO vicia Com avisos, o programa n\u00e3o falha, mas o programador fica ciente que provamelmente deve reescrever a parte de seu c\u00f3digo que provocou o aviso","title":"Avisos"},{"location":"avisos/#categorias-de-aviso","text":"No Python, h\u00e1 uma variedade de exce\u00e7\u00f5es integradas que refletem categorias de aviso, algumas delas s\u00e3o: Classe Warning: \u00e9 a superclasse de todas as classes da categoria de aviso e uma subclasse da classe Exce\u00e7\u00e3o. Classe UserWarning: categoria padr\u00e3o da fun\u00e7\u00e3o warn (). Classe DeprecationWarning: categoria base para alertas sobre recursos obsoletos quando esses avisos s\u00e3o para outros desenvolvedores (acionado por c\u00f3digo em main a menos que seja ignorado). Classe SyntaxWarning: classe base para avisos de atributos sint\u00e1ticos suspeitos. Classe RuntimeWarning: classe base para avisos de atributos de tempo de execu\u00e7\u00e3o suspeitos. Classe FutureWarning: classe base para avisos sobre recursos obsoletos quando certos avisos s\u00e3o destinados a usu\u00e1rios finais de programas escritos em Python. Classe PendingDeprecationWarning: classe base para avisos de um atributo desatualizado. Classe ImportWarning: classe base para avisos causados \u200b\u200bdurante o processo de importa\u00e7\u00e3o de um m\u00f3dulo. Classe UnicodeWarning: classe base para avisos baseados em Unicode. Classe BytesWarning: classe base para avisos baseados em bytes e bytearray. Classe ResourceWarning: classe base para avisos relacionados a recursos.","title":"Categorias de Aviso"},{"location":"avisos/#referencias","text":"warnings \u2014 Controle de avisos \u2014 documenta\u00e7\u00e3o Python 3.9.7 Warnings in Python - GeeksforGeeks Python warnings Example","title":"Refer\u00eancias:"},{"location":"captura-de-excecao-exemplo-1/","text":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 1 1 2 3 4 5 6 7 8 9 10 11 >>> try : a = int ( input ( \"Entre com um numero: \" )) b = int ( input ( \"Entre com outro numero: \" )) print ( a , \"/\" , b , \"=\" , a / b ) except ZeroDivisionError : print ( \"Ooops, segundo numero n\u00e3o pode ser zero!\" ) Entre com um numero 1 Entre com outro numero 0 1 / 0 = Ooops , segundo numero n\u00e3o pode ser zero !","title":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 1"},{"location":"captura-de-excecao-exemplo-1/#captura-de-excecao-exemplo-1","text":"1 2 3 4 5 6 7 8 9 10 11 >>> try : a = int ( input ( \"Entre com um numero: \" )) b = int ( input ( \"Entre com outro numero: \" )) print ( a , \"/\" , b , \"=\" , a / b ) except ZeroDivisionError : print ( \"Ooops, segundo numero n\u00e3o pode ser zero!\" ) Entre com um numero 1 Entre com outro numero 0 1 / 0 = Ooops , segundo numero n\u00e3o pode ser zero !","title":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 1"},{"location":"captura-de-excecao-exemplo-2/","text":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 2 1 2 3 4 5 6 7 8 9 10 >>> try : a = int ( input ( \"Entre com um numero \" )) b = int ( input ( \"Entre com outro numero \" )) print ( a , \"/\" , b , \"=\" , a / b ) except ( ZeroDivisionError , TypeError ): print ( \"Ooops, tente novamente!\" ) Entre com um numero 1 Entre com outro numero \"a\" 1 / a = Ooops , tente novamente !","title":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 2"},{"location":"captura-de-excecao-exemplo-2/#captura-de-excecao-exemplo-2","text":"1 2 3 4 5 6 7 8 9 10 >>> try : a = int ( input ( \"Entre com um numero \" )) b = int ( input ( \"Entre com outro numero \" )) print ( a , \"/\" , b , \"=\" , a / b ) except ( ZeroDivisionError , TypeError ): print ( \"Ooops, tente novamente!\" ) Entre com um numero 1 Entre com outro numero \"a\" 1 / a = Ooops , tente novamente !","title":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 2"},{"location":"captura-de-excecao-exemplo-3/","text":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 3 1 2 3 4 5 6 7 8 9 10 11 >>> try : a = int ( input ( \"Entre com um numero \" )) b = int ( input ( \"Entre com outro numero \" )) print ( a , \"/\" , b , \"=\" , a / b ) except ( ZeroDivisionError , TypeError ) as e : print ( \"Ooops, deu erro:\" , e ) Entre com um numero 1 Entre com outro numero \"z\" 1 / z = Ooops , deu erro : unsupported operand type ( s ) for / : 'int' and 'str'","title":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 3"},{"location":"captura-de-excecao-exemplo-3/#captura-de-excecao-exemplo-3","text":"1 2 3 4 5 6 7 8 9 10 11 >>> try : a = int ( input ( \"Entre com um numero \" )) b = int ( input ( \"Entre com outro numero \" )) print ( a , \"/\" , b , \"=\" , a / b ) except ( ZeroDivisionError , TypeError ) as e : print ( \"Ooops, deu erro:\" , e ) Entre com um numero 1 Entre com outro numero \"z\" 1 / z = Ooops , deu erro : unsupported operand type ( s ) for / : 'int' and 'str'","title":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 3"},{"location":"captura-de-excecao-exemplo-4/","text":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 4 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 >>> try : a = int ( input ( \"Entre com um numero \" )) b = int ( input ( \"Entre com outro numero \" )) print ( a , \"/\" , b , \"=\" , a / b ) except ZeroDivisionError : print ( \"Ooops, divis\u00e3o por zero\" ) except TypeError : print ( \"Ooops, voc\u00ea n\u00e3o deu um n\u00famero\" ) except : print ( \"Deu um bode qualquer\" ) Entre com um numero 2 Entre com outro numero fads2312 Deu um bode qualquer","title":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 4"},{"location":"captura-de-excecao-exemplo-4/#captura-de-excecao-exemplo-4","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 >>> try : a = int ( input ( \"Entre com um numero \" )) b = int ( input ( \"Entre com outro numero \" )) print ( a , \"/\" , b , \"=\" , a / b ) except ZeroDivisionError : print ( \"Ooops, divis\u00e3o por zero\" ) except TypeError : print ( \"Ooops, voc\u00ea n\u00e3o deu um n\u00famero\" ) except : print ( \"Deu um bode qualquer\" ) Entre com um numero 2 Entre com outro numero fads2312 Deu um bode qualquer","title":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 4"},{"location":"captura-de-excecao-exemplo-5/","text":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 >>> try : a = int ( input ( \"Entre com um numero \" )) b = int ( input ( \"Entre com outro numero \" )) print ( a , \"/\" , b , \"=\" , a / b ) except ( ZeroDivisionError , TypeError ) as e : print ( \"Ooops, deu erro:\" , e ) except Exception as e : print ( \"Deu bode n\u00e3o previsto:\" , e ) raise Entre com um numero a Entre com outro numero Deu bode n\u00e3o previsto : EOF when reading a line Traceback ( most recent call last ): File \"<pyshell#52>\" , line 3 , in - toplevel - b = int ( input ( \"Entre com outro numero \" )) EOFError : EOF when reading a line","title":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 5"},{"location":"captura-de-excecao-exemplo-5/#captura-de-excecao-exemplo-5","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 >>> try : a = int ( input ( \"Entre com um numero \" )) b = int ( input ( \"Entre com outro numero \" )) print ( a , \"/\" , b , \"=\" , a / b ) except ( ZeroDivisionError , TypeError ) as e : print ( \"Ooops, deu erro:\" , e ) except Exception as e : print ( \"Deu bode n\u00e3o previsto:\" , e ) raise Entre com um numero a Entre com outro numero Deu bode n\u00e3o previsto : EOF when reading a line Traceback ( most recent call last ): File \"<pyshell#52>\" , line 3 , in - toplevel - b = int ( input ( \"Entre com outro numero \" )) EOFError : EOF when reading a line","title":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 5"},{"location":"captura-de-excecao-exemplo-6/","text":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 >>> while True : try : a = int ( input ( \"Entre com um numero \" )) b = int ( input ( \"Entre com outro numero \" )) print ( a , \"/\" , b , \"=\" , a / b ) except Exception as e : print ( \"Deu bode:\" , e ) print ( \"Tente novamente\" ) else : break Entre com um numero 1 Entre com outro numero xxx Deu bode : name 'xxx' is not defined Tente novamente Entre com um numero 1 Entre com outro numero 2 1 / 2 = 0","title":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 6"},{"location":"captura-de-excecao-exemplo-6/#captura-de-excecao-exemplo-6","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 >>> while True : try : a = int ( input ( \"Entre com um numero \" )) b = int ( input ( \"Entre com outro numero \" )) print ( a , \"/\" , b , \"=\" , a / b ) except Exception as e : print ( \"Deu bode:\" , e ) print ( \"Tente novamente\" ) else : break Entre com um numero 1 Entre com outro numero xxx Deu bode : name 'xxx' is not defined Tente novamente Entre com um numero 1 Entre com outro numero 2 1 / 2 = 0","title":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 6"},{"location":"captura-de-excecao-exemplo-7/","text":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 7 1 2 3 4 5 6 7 8 9 10 11 12 >>> try : try : x = int ( input ( \"Entre com um n\u00famero: \" )) finally : print ( \"Restabelecendo um valor para x\" ) x = None except : print ( \"Deu bode\" ) Entre com um n\u00famero : 2 xx Restabelecendo um valor para x Deu bode","title":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 7"},{"location":"captura-de-excecao-exemplo-7/#captura-de-excecao-exemplo-7","text":"1 2 3 4 5 6 7 8 9 10 11 12 >>> try : try : x = int ( input ( \"Entre com um n\u00famero: \" )) finally : print ( \"Restabelecendo um valor para x\" ) x = None except : print ( \"Deu bode\" ) Entre com um n\u00famero : 2 xx Restabelecendo um valor para x Deu bode","title":"Captura de exce\u00e7\u00e3o \u2014 Exemplo 7"},{"location":"captura-de-excecao/","text":"Capturando Exce\u00e7\u00f5es Para capturar uma exce\u00e7\u00e3o possivelmente levantada por um trecho de c\u00f3digo, pode\u00ad-se usar a constru\u00e7\u00e3o try/except : 1 2 3 4 try : C\u00f3digo except Exce\u00e7\u00f5es : C\u00f3digo de tratamento da exce\u00e7\u00e3o Sendo que Exce\u00e7\u00f5es pode ser: Classe Classe as var (Classe1,...,ClasseN) (Classe1,...,ClasseN) as var Onde: Classe , Classe1 e ClasseN s\u00e3o nomes de classes de exce\u00e7\u00e3o var \u00e9 uma vari\u00e1vel \u00e0 qual \u00e9 atribu\u00edda um objeto de exce\u00e7\u00e3o Refer\u00eancias Instru\u00e7\u00f5es compostas \u2014 the try statement \u2014 documenta\u00e7\u00e3o Python","title":"Capturando Exce\u00e7\u00f5es"},{"location":"captura-de-excecao/#capturando-excecoes","text":"Para capturar uma exce\u00e7\u00e3o possivelmente levantada por um trecho de c\u00f3digo, pode\u00ad-se usar a constru\u00e7\u00e3o try/except : 1 2 3 4 try : C\u00f3digo except Exce\u00e7\u00f5es : C\u00f3digo de tratamento da exce\u00e7\u00e3o Sendo que Exce\u00e7\u00f5es pode ser: Classe Classe as var (Classe1,...,ClasseN) (Classe1,...,ClasseN) as var Onde: Classe , Classe1 e ClasseN s\u00e3o nomes de classes de exce\u00e7\u00e3o var \u00e9 uma vari\u00e1vel \u00e0 qual \u00e9 atribu\u00edda um objeto de exce\u00e7\u00e3o","title":"Capturando Exce\u00e7\u00f5es"},{"location":"captura-de-excecao/#referencias","text":"Instru\u00e7\u00f5es compostas \u2014 the try statement \u2014 documenta\u00e7\u00e3o Python","title":"Refer\u00eancias"},{"location":"classes-de-excecao/","text":"Algumas Classes de Exce\u00e7\u00e3o Classe Descri\u00e7\u00e3o Exception Classe base para todas as exce\u00e7\u00f5es AttributeError Falha no acesso ou atribui\u00e7\u00e3o a atributo de classe IOError Falha no acesso a arquivo inexistente ou outros de E/S IndexError \u00cdndice inexistente de seq\u00fc\u00eancia KeyError Chave inexistente de dicion\u00e1rio NameError Vari\u00e1vel inexistente SyntaxError Erro de sintaxe (c\u00f3digo errado) TypeError Operador embutido aplicado a objeto de tipo errado ValueError Operador embutido aplicado a objeto de tipo certo mas valor inapropriado ZeroDivisionError Divis\u00e3o ou m\u00f3dulo por zero","title":"Algumas Classes de Exce\u00e7\u00e3o"},{"location":"classes-de-excecao/#algumas-classes-de-excecao","text":"Classe Descri\u00e7\u00e3o Exception Classe base para todas as exce\u00e7\u00f5es AttributeError Falha no acesso ou atribui\u00e7\u00e3o a atributo de classe IOError Falha no acesso a arquivo inexistente ou outros de E/S IndexError \u00cdndice inexistente de seq\u00fc\u00eancia KeyError Chave inexistente de dicion\u00e1rio NameError Vari\u00e1vel inexistente SyntaxError Erro de sintaxe (c\u00f3digo errado) TypeError Operador embutido aplicado a objeto de tipo errado ValueError Operador embutido aplicado a objeto de tipo certo mas valor inapropriado ZeroDivisionError Divis\u00e3o ou m\u00f3dulo por zero","title":"Algumas Classes de Exce\u00e7\u00e3o"},{"location":"criacao-de-classe-de-excecao/","text":"Criando uma Classe de Exce\u00e7\u00e3o Basta criar uma classe da forma habitual derivando\u00ad-a da classe Exception N\u00e3o \u00e9 preciso redefinir qualquer m\u00e9todo Ex.: 1 2 3 4 5 6 7 8 >>> class MinhaExcecao ( Exception ): pass >>> raise MinhaExcecao ( \"Deu bode!\" ) Traceback ( most recent call last ): File \"<pyshell#11>\" , line 1 , in - toplevel - raise MinhaExcecao ( \"Deu bode!\" ) MinhaExcecao : Deu bode !","title":"Criando uma Classe de Exce\u00e7\u00e3o"},{"location":"criacao-de-classe-de-excecao/#criando-uma-classe-de-excecao","text":"Basta criar uma classe da forma habitual derivando\u00ad-a da classe Exception N\u00e3o \u00e9 preciso redefinir qualquer m\u00e9todo Ex.: 1 2 3 4 5 6 7 8 >>> class MinhaExcecao ( Exception ): pass >>> raise MinhaExcecao ( \"Deu bode!\" ) Traceback ( most recent call last ): File \"<pyshell#11>\" , line 1 , in - toplevel - raise MinhaExcecao ( \"Deu bode!\" ) MinhaExcecao : Deu bode !","title":"Criando uma Classe de Exce\u00e7\u00e3o"},{"location":"else/","text":"A cl\u00e1usula else \u00c9 poss\u00edvel completar um comando try com uma cl\u00e1usula else que introduz um trecho de c\u00f3digo que s\u00f3 \u00e9 executado quando nenhuma exce\u00e7\u00e3o ocorre: 1 2 3 4 5 6 try : C\u00f3digo except Exce\u00e7\u00f5es : C\u00f3digo de tratamento da exce\u00e7\u00e3o else : C\u00f3digo executado se n\u00e3o ocorrem exce\u00e7\u00f5es No contexto do bloco try-except , o comando else deve ser interpretado em portugu\u00eas como se fosse \"e mais\" , como na express\u00e3o em ingl\u00eas: What else? (Tradu\u00e7\u00e3o: \"O que mais?\")","title":"A cl\u00e1usula else"},{"location":"else/#a-clausula-else","text":"\u00c9 poss\u00edvel completar um comando try com uma cl\u00e1usula else que introduz um trecho de c\u00f3digo que s\u00f3 \u00e9 executado quando nenhuma exce\u00e7\u00e3o ocorre: 1 2 3 4 5 6 try : C\u00f3digo except Exce\u00e7\u00f5es : C\u00f3digo de tratamento da exce\u00e7\u00e3o else : C\u00f3digo executado se n\u00e3o ocorrem exce\u00e7\u00f5es No contexto do bloco try-except , o comando else deve ser interpretado em portugu\u00eas como se fosse \"e mais\" , como na express\u00e3o em ingl\u00eas: What else? (Tradu\u00e7\u00e3o: \"O que mais?\")","title":"A cl\u00e1usula else"},{"location":"excecoes/","text":"Exce\u00e7\u00f5es Quando um programa encontra dificuldades n\u00e3o previstas, diz\u00ad-se que uma condi\u00e7\u00e3o excepcional ou uma exce\u00e7\u00e3o ocorreu Um erro \u00e9 uma exce\u00e7\u00e3o mas nem toda exce\u00e7\u00e3o \u00e9 um erro Para poder representar tais eventos, Python define os chamados objetos de exce\u00e7\u00e3o ( exception objects ) Se a condi\u00e7\u00e3o excepcional n\u00e3o \u00e9 prevista (e tratada), o programa termina com uma mensagem de rastreamento: 1 2 3 4 5 6 >>> 1 / 0 Traceback ( most recent call last ): File \"<pyshell#0>\" , line 1 , in - toplevel - 1 / 0 ZeroDivisionError : integer division or modulo by zero","title":"Exce\u00e7\u00f5es"},{"location":"excecoes/#excecoes","text":"Quando um programa encontra dificuldades n\u00e3o previstas, diz\u00ad-se que uma condi\u00e7\u00e3o excepcional ou uma exce\u00e7\u00e3o ocorreu Um erro \u00e9 uma exce\u00e7\u00e3o mas nem toda exce\u00e7\u00e3o \u00e9 um erro Para poder representar tais eventos, Python define os chamados objetos de exce\u00e7\u00e3o ( exception objects ) Se a condi\u00e7\u00e3o excepcional n\u00e3o \u00e9 prevista (e tratada), o programa termina com uma mensagem de rastreamento: 1 2 3 4 5 6 >>> 1 / 0 Traceback ( most recent call last ): File \"<pyshell#0>\" , line 1 , in - toplevel - 1 / 0 ZeroDivisionError : integer division or modulo by zero","title":"Exce\u00e7\u00f5es"},{"location":"excepts/","text":"Mais except \u00c9 poss\u00edvel tratar diferentemente as diversas exce\u00e7\u00f5es usando duas ou mais cl\u00e1usulas except Se quisermos nos prevenir contra qualquer tipo de erro, podemos usar uma cl\u00e1usula except sem nome de classe Outra op\u00e7\u00e3o \u00e9 usar a classe Exception , que \u00e9 base para todas as exce\u00e7\u00f5es e portanto casa com qualquer exce\u00e7\u00e3o Se n\u00e3o quisermos tratar um erro em uma cl\u00e1usula except , podemos pass\u00e1\u00ad-la adiante usando o comando raise Nesse caso, podemos usar um raise sem argumentos ou passar explicitamente um objeto de exce\u00e7\u00e3o","title":"Mais except"},{"location":"excepts/#mais-except","text":"\u00c9 poss\u00edvel tratar diferentemente as diversas exce\u00e7\u00f5es usando duas ou mais cl\u00e1usulas except Se quisermos nos prevenir contra qualquer tipo de erro, podemos usar uma cl\u00e1usula except sem nome de classe Outra op\u00e7\u00e3o \u00e9 usar a classe Exception , que \u00e9 base para todas as exce\u00e7\u00f5es e portanto casa com qualquer exce\u00e7\u00e3o Se n\u00e3o quisermos tratar um erro em uma cl\u00e1usula except , podemos pass\u00e1\u00ad-la adiante usando o comando raise Nesse caso, podemos usar um raise sem argumentos ou passar explicitamente um objeto de exce\u00e7\u00e3o","title":"Mais except"},{"location":"finally/","text":"A cl\u00e1usula finally A cl\u00e1usula finally pode ser usada para se assegurar que mesmo que ocorra algum erro, uma determinada seq\u00fc\u00eancia de comandos vai ser executada Pode ser usada para restabelecer alguma vari\u00e1vel para um valor padr\u00e3o ( default ), por exemplo A cl\u00e1usula finally e cl\u00e1usulas except s\u00e3o mutuamente exclusivas Exce\u00e7\u00f5es nesse caso n\u00e3o s\u00e3o tratadas \u00c9 poss\u00edvel combinar ambas usando comandos try aninhados, mas normalmente n\u00e3o h\u00e1 muito uso para isso","title":"A cl\u00e1usula finally"},{"location":"finally/#a-clausula-finally","text":"A cl\u00e1usula finally pode ser usada para se assegurar que mesmo que ocorra algum erro, uma determinada seq\u00fc\u00eancia de comandos vai ser executada Pode ser usada para restabelecer alguma vari\u00e1vel para um valor padr\u00e3o ( default ), por exemplo A cl\u00e1usula finally e cl\u00e1usulas except s\u00e3o mutuamente exclusivas Exce\u00e7\u00f5es nesse caso n\u00e3o s\u00e3o tratadas \u00c9 poss\u00edvel combinar ambas usando comandos try aninhados, mas normalmente n\u00e3o h\u00e1 muito uso para isso","title":"A cl\u00e1usula finally"},{"location":"geradores-exemplo/","text":"Geradores \u2014 Exemplo 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 >>> def gerador (): for i in range ( 10 ): print ( \"i = \" , i ) yield i >>> for j in gerador (): print ( \"j = \" , j ) i = 0 j = 0 i = 1 j = 1 .... i = 9 j = 9","title":"Geradores \u2014 Exemplo"},{"location":"geradores-exemplo/#geradores-exemplo","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 >>> def gerador (): for i in range ( 10 ): print ( \"i = \" , i ) yield i >>> for j in gerador (): print ( \"j = \" , j ) i = 0 j = 0 i = 1 j = 1 .... i = 9 j = 9","title":"Geradores \u2014 Exemplo"},{"location":"geradores/","text":"Geradores Geradores s\u00e3o fun\u00e7\u00f5es especiais que retornam iteradores Em resumo, uma fun\u00e7\u00e3o geradora \u00e9 uma que cont\u00e9m o comando yield valor Uma fun\u00e7\u00e3o geradora normalmente \u00e9 chamada para obter o iterador para um comando for O comando for automaticamente iterar\u00e1 sobre todos os valores que yield \u201cretorna\u201d Observe que o iterador produzido pela fun\u00e7\u00e3o geradora \u00e9 tal que o c\u00f3digo que gera os valores e o c\u00f3digo dentro do for se sucedem alternadamente Geradores s\u00e3o especialmente \u00fateis em c\u00f3digos recursivos","title":"Geradores"},{"location":"geradores/#geradores","text":"Geradores s\u00e3o fun\u00e7\u00f5es especiais que retornam iteradores Em resumo, uma fun\u00e7\u00e3o geradora \u00e9 uma que cont\u00e9m o comando yield valor Uma fun\u00e7\u00e3o geradora normalmente \u00e9 chamada para obter o iterador para um comando for O comando for automaticamente iterar\u00e1 sobre todos os valores que yield \u201cretorna\u201d Observe que o iterador produzido pela fun\u00e7\u00e3o geradora \u00e9 tal que o c\u00f3digo que gera os valores e o c\u00f3digo dentro do for se sucedem alternadamente Geradores s\u00e3o especialmente \u00fateis em c\u00f3digos recursivos","title":"Geradores"},{"location":"iteradores-exemplo/","text":"Iteradores \u2014 Exemplo 1 2 3 4 5 6 7 8 9 10 11 12 13 14 >>> class MeuIterador : a = 0 def __iter__ ( self ): return self def next ( self ): if self . a > 10 : raise StopIteration self . a += 1 return self . a >>> iter = MeuIterador () >>> for i in iter : print ( i , end = \" \" ) 1 2 3 4 5 6 7 8 9 10 11","title":"Iteradores \u2014 Exemplo"},{"location":"iteradores-exemplo/#iteradores-exemplo","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 >>> class MeuIterador : a = 0 def __iter__ ( self ): return self def next ( self ): if self . a > 10 : raise StopIteration self . a += 1 return self . a >>> iter = MeuIterador () >>> for i in iter : print ( i , end = \" \" ) 1 2 3 4 5 6 7 8 9 10 11","title":"Iteradores \u2014 Exemplo"},{"location":"iteradores/","text":"Iteradores S\u00e3o maneiras gen\u00e9ricas de implementar itera\u00e7\u00f5es com classes Permite o uso do comando for \u00c9 geralmente mais econ\u00f4mico do que usar uma lista pois n\u00e3o \u00e9 preciso armazenar todos os valores, mas apenas computar um por vez Um iterador \u00e9 uma classe que implementa o m\u00e9todo m\u00e1gico __iter__ \u00c9 um m\u00e9todo que, por sua vez, retorna um objeto que implementa um m\u00e9todo chamado next O m\u00e9todo next deve retornar o \u201cpr\u00f3ximo\u201d valor a ser iterado Se n\u00e3o h\u00e1 pr\u00f3ximo valor, next deve \u201clevantar\u201d a exce\u00e7\u00e3o StopIteration","title":"Iteradores"},{"location":"iteradores/#iteradores","text":"S\u00e3o maneiras gen\u00e9ricas de implementar itera\u00e7\u00f5es com classes Permite o uso do comando for \u00c9 geralmente mais econ\u00f4mico do que usar uma lista pois n\u00e3o \u00e9 preciso armazenar todos os valores, mas apenas computar um por vez Um iterador \u00e9 uma classe que implementa o m\u00e9todo m\u00e1gico __iter__ \u00c9 um m\u00e9todo que, por sua vez, retorna um objeto que implementa um m\u00e9todo chamado next O m\u00e9todo next deve retornar o \u201cpr\u00f3ximo\u201d valor a ser iterado Se n\u00e3o h\u00e1 pr\u00f3ximo valor, next deve \u201clevantar\u201d a exce\u00e7\u00e3o StopIteration","title":"Iteradores"},{"location":"objetos-de-excecao/","text":"Objetos de Exce\u00e7\u00e3o Cada exce\u00e7\u00e3o individual corresponde a um objeto de exce\u00e7\u00e3o , que por sua vez \u00e9 uma inst\u00e2ncia de alguma classe de exce\u00e7\u00e3o No exemplo anterior, tal objeto \u00e9 inst\u00e2ncia da classe ZeroDivisionError Diz-\u00adse que o programa gerou ou levantou ( raised , em ingl\u00eas) uma condi\u00e7\u00e3o de exce\u00e7\u00e3o na forma de um objeto Um programa bem elaborado precisa capturar ( catch , em ingl\u00eas) tais objetos e trat\u00e1-\u00adlos para que a execu\u00e7\u00e3o n\u00e3o seja abortada","title":"Objetos de Exce\u00e7\u00e3o"},{"location":"objetos-de-excecao/#objetos-de-excecao","text":"Cada exce\u00e7\u00e3o individual corresponde a um objeto de exce\u00e7\u00e3o , que por sua vez \u00e9 uma inst\u00e2ncia de alguma classe de exce\u00e7\u00e3o No exemplo anterior, tal objeto \u00e9 inst\u00e2ncia da classe ZeroDivisionError Diz-\u00adse que o programa gerou ou levantou ( raised , em ingl\u00eas) uma condi\u00e7\u00e3o de exce\u00e7\u00e3o na forma de um objeto Um programa bem elaborado precisa capturar ( catch , em ingl\u00eas) tais objetos e trat\u00e1-\u00adlos para que a execu\u00e7\u00e3o n\u00e3o seja abortada","title":"Objetos de Exce\u00e7\u00e3o"},{"location":"raise-exemplos/","text":"Raise \u2014 Exemplos 1 2 3 4 5 6 7 8 9 10 11 12 13 >>> raise Exception Traceback ( most recent call last ): File \"<pyshell#3>\" , line 1 , in - toplevel - raise Exception Exception >>> raise Exception ( \"Deu Bode\" ) Traceback ( most recent call last ): File \"<pyshell#7>\" , line 1 , in - toplevel - raise Exception ( \"Deu Bode\" ) Exception : Deu Bode","title":"Raise \u2014 Exemplos"},{"location":"raise-exemplos/#raise-exemplos","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 >>> raise Exception Traceback ( most recent call last ): File \"<pyshell#3>\" , line 1 , in - toplevel - raise Exception Exception >>> raise Exception ( \"Deu Bode\" ) Traceback ( most recent call last ): File \"<pyshell#7>\" , line 1 , in - toplevel - raise Exception ( \"Deu Bode\" ) Exception : Deu Bode","title":"Raise \u2014 Exemplos"},{"location":"raise/","text":"O comando raise Para sinalizar a ocorr\u00eancia de uma condi\u00e7\u00e3o excepcional, pode-\u00adse usar o comando raise que tem uma das formas: raise classe raise classe (mensagem) Onde classe \u00e9 uma das classes de exce\u00e7\u00e3o definidas pelo Python Para saber todos os tipos de exce\u00e7\u00e3o consulte o manual Se quiser uma classe gen\u00e9rica use a classe Exception Uma listagem pode ser obtida escrevendo 1 2 3 4 >>> import builtins >>> for nome in dir ( builtins ): if nome . endswith ( 'Error' ) or nome . endswith ( 'Exception' ): print ( nome )","title":"O comando *raise*"},{"location":"raise/#o-comando-raise","text":"Para sinalizar a ocorr\u00eancia de uma condi\u00e7\u00e3o excepcional, pode-\u00adse usar o comando raise que tem uma das formas: raise classe raise classe (mensagem) Onde classe \u00e9 uma das classes de exce\u00e7\u00e3o definidas pelo Python Para saber todos os tipos de exce\u00e7\u00e3o consulte o manual Se quiser uma classe gen\u00e9rica use a classe Exception Uma listagem pode ser obtida escrevendo 1 2 3 4 >>> import builtins >>> for nome in dir ( builtins ): if nome . endswith ( 'Error' ) or nome . endswith ( 'Exception' ): print ( nome )","title":"O comando raise"}]}